% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lr_target_correlation.R
\name{lr_target_prior_cor_inference}
\alias{lr_target_prior_cor_inference}
\title{lr_target_prior_cor_inference}
\usage{
lr_target_prior_cor_inference(receivers_oi, abundance_expression_info, celltype_de, grouping_tbl, prioritization_tables, ligand_target_matrix, logFC_threshold = 0.25, p_val_threshold = 0.05, p_val_adj = FALSE, top_n_LR = 2500)
}
\arguments{
\item{receivers_oi}{Character vector with the names of the receiver cell types of interest}

\item{abundance_expression_info}{Output of `get_abundance_expression_info_separate` or `get_abundance_expression_info`}

\item{celltype_de}{Output of `perform_muscat_de_analysis`}

\item{grouping_tbl}{Data frame showing the groups of each sample (and batches per sample if applicable) (columns: sample and group; and if applicable all batches of interest)}

\item{prioritization_tables}{Output of `generate_prioritization_tables` or sublist in the output of `multi_nichenet_analysis`}

\item{ligand_target_matrix}{Prior knowledge model of ligand-target regulatory potential (matrix with ligands in columns and targets in rows). See https://github.com/saeyslab/nichenetr.}

\item{logFC_threshold}{For defining the gene set of interest for NicheNet ligand activity: what is the minimum logFC a gene should have to belong to this gene set? Default: 0.25/}

\item{p_val_threshold}{For defining the gene set of interest for NicheNet ligand activity: what is the maximam p-value a gene should have to belong to this gene set? Default: 0.05.}

\item{p_val_adj}{For defining the gene set of interest for NicheNet ligand activity: should we look at the p-value corrected for multiple testing? Default: FALSE.}

\item{top_n_LR}{top nr of LR pairs for which correlation with target genes will be calculated. Is 2500 by default. If you want to calculate correlation for all LR pairs, set this argument to NA.}
}
\value{
Tibble with expression correlation and prior knowledge support measures for ligand-receptor to target gene links
}
\description{
\code{lr_target_prior_cor_inference} Calculate the pearson and spearman expression correlation between ligand-receptor pair pseudobulk expression products and DE gene expression product. Add the NicheNet ligand-target regulatory potential score as well as prior knowledge support for the LR-->Target link.
}
\examples{
\dontrun{
library(dplyr)
lr_network <- readRDS(url("https://zenodo.org/record/3260758/files/lr_network.rds"))
lr_network <- lr_network \%>\%
  dplyr::rename(ligand = from, receptor = to) \%>\%
  dplyr::distinct(ligand, receptor)
ligand_target_matrix <- readRDS(url("https://zenodo.org/record/3260758/files/ligand_target_matrix.rds"))
sample_id <- "tumor"
group_id <- "pEMT"
celltype_id <- "celltype"
batches <- NA
contrasts_oi <- c("'High-Low','Low-High'")
contrast_tbl <- tibble(contrast = c("High-Low", "Low-High"), group = c("High", "Low"))
min_cells <- 10
metadata_abundance <- SummarizedExperiment::colData(sce)[, c(sample_id, group_id, celltype_id)]
colnames(metadata_abundance) <- c("sample_id", "group_id", "celltype_id")
abundance_data <- metadata_abundance \%>\%
  tibble::as_tibble() \%>\%
  dplyr::group_by(sample_id, celltype_id) \%>\%
  dplyr::count() \%>\%
  dplyr::inner_join(metadata_abundance \%>\% tibble::as_tibble() \%>\% dplyr::distinct(sample_id, group_id))
abundance_data <- abundance_data \%>\%
  dplyr::mutate(keep = n >= min_cells) \%>\%
  dplyr::mutate(keep = factor(keep, levels = c(TRUE, FALSE)))
abundance_data_receiver <- process_info_to_ic(abund_data = abundance_data, ic_type = "receiver")
abundance_data_sender <- process_info_to_ic(abund_data = abundance_data, ic_type = "sender")

celltype_info <- get_avg_frac_exprs_abund(sce = sce, sample_id = sample_id, celltype_id = celltype_id, group_id = group_id)

receiver_info_ic <- process_info_to_ic(info_object = celltype_info, ic_type = "receiver", lr_network = lr_network)
sender_info_ic <- process_info_to_ic(info_object = celltype_info, ic_type = "sender", lr_network = lr_network)
senders_oi <- SummarizedExperiment::colData(sce)[, celltype_id] \%>\% unique()
receivers_oi <- SummarizedExperiment::colData(sce)[, celltype_id] \%>\% unique()
sender_receiver_info <- combine_sender_receiver_info_ic(sender_info = sender_info_ic, receiver_info = receiver_info_ic, senders_oi = senders_oi, receivers_oi = receivers_oi, lr_network = lr_network)

abundance_expression_info <- list(abund_plot_sample = abund_plot, abund_plot_group = abund_plot_boxplot, abundance_data_receiver = abundance_data_receiver, abundance_data_sender = abundance_data_sender, celltype_info = celltype_info, receiver_info_ic = receiver_info_ic, sender_info_ic = sender_info_ic, sender_receiver_info = sender_receiver_info)

celltype_de <- perform_muscat_de_analysis(
  sce = sce,
  sample_id = sample_id,
  celltype_id = celltype_id,
  group_id = group_id,
  batches = batches,
  contrasts = contrasts_oi
)

sender_receiver_de <- combine_sender_receiver_de(
  sender_de = celltype_de,
  receiver_de = celltype_de,
  senders_oi = senders_oi,
  receivers_oi = receivers_oi,
  lr_network = lr_network
)

ligand_activities_targets_DEgenes <- get_ligand_activities_targets_DEgenes(
  receiver_de = celltype_de,
  receivers_oi = receivers_oi,
  receiver_frq_df_group = celltype_info$frq_df_group,
  ligand_target_matrix = ligand_target_matrix
)


sender_receiver_tbl <- sender_receiver_de \%>\% dplyr::distinct(sender, receiver)
metadata_combined <- SummarizedExperiment::colData(sce) \%>\% tibble::as_tibble()
grouping_tbl <- metadata_combined[, c(sample_id, group_id)] \%>\%
  tibble::as_tibble() \%>\%
  dplyr::distinct()
colnames(grouping_tbl) <- c("sample", "group")

frac_cutoff <- 0.05
prioritization_tables <- generate_prioritization_tables(
  sender_receiver_info = sender_receiver_info,
  sender_receiver_de = sender_receiver_de,
  ligand_activities_targets_DEgenes = ligand_activities_targets_DEgenes,
  contrast_tbl = contrast_tbl,
  sender_receiver_tbl = sender_receiver_tbl,
  grouping_tbl = grouping_tbl,
  fraction_cutoff = frac_cutoff, abundance_data_receiver, abundance_data_sender
)

receivers_oi <- prioritization_tables$group_prioritization_tbl$receiver \%>\% unique()
lr_target_prior_cor <- lr_target_prior_cor_inference(receivers_oi, abundance_expression_info, celltype_de, grouping_tbl, prioritization_tables, ligand_target_matrix)
}

}
